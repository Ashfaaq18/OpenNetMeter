<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:res="clr-namespace:OpenNetMeter.Properties">

    <Style TargetType="Line" x:Key="LineColor">
        <Setter Property="Stroke" Value="Black"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="Stroke" Value="White"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="TextBlock" x:Key="FontColor">
        <Setter Property="Foreground" Value="Black"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="Foreground" Value="White"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Grid" x:Key="MainWindowBackgroundStyle">
        <Setter Property="Background" Value="White"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="Background" Value="#232931"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Grid" x:Key="PageBackgroundStyle">
        <Setter Property="Background" Value="#f1f1f1"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="Background" Value="#393E46"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="ButtonColor">
        <Setter Property="Background" Value="White"></Setter>
        <!-- set button highlight template color -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="Background" Value="#232931"></Setter>
            </DataTrigger>
            <!-- set button highlight light mode color -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ffcab5 "/>
            </Trigger>

            <!-- set button highlight dark mode color -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="DarkSalmon"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="MainWindowSummaryTab">

        <!-- set unselected button light mode color -->
        <Setter Property="Background" Value="#f1f1f1"/>
        <Setter Property="BorderBrush" Value="#f1f1f1"/>

        <!-- set button highlight template color -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"  BorderThickness="0,0,0,5" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <!-- set unselected button dark mode color -->
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="Background" Value="#393E46"/>
                <Setter Property="BorderBrush" Value="#393E46"/>
            </DataTrigger>

            <!-- set selected button light mode color -->
            <DataTrigger Binding="{Binding TabBtnToggle}" Value="0">
                <Setter Property="Background" Value="#f1f1f1"/>
                <Setter Property="BorderBrush" Value="Black"/>
            </DataTrigger>

            <!-- set selected button dark mode color -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True"/>
                    <Condition Binding="{Binding TabBtnToggle}" Value="0"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="#393E46"/>
                <Setter Property="BorderBrush" Value="#f1f1f1"/>
            </MultiDataTrigger>

            <!-- set button highlight light mode color -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ffcab5 "/>
                <Setter Property="BorderBrush" Value="Gray"/>
            </Trigger>

            <!-- set button highlight dark mode color -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="DarkSalmon"/>
                <Setter Property="BorderBrush" Value="#f1f1f1"/>
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="MainWindowDetailedTab">

        <!-- set unselected button light mode color -->
        <Setter Property="Background" Value="#f1f1f1"/>
        <Setter Property="BorderBrush" Value="#f1f1f1"/>

        <!-- set button highlight template color -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"  BorderThickness="0,0,0,5" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <!-- set unselected button dark mode color -->
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="Background" Value="#393E46"/>
                <Setter Property="BorderBrush" Value="#393E46"/>
            </DataTrigger>

            <!-- set selected button light mode color -->
            <DataTrigger Binding="{Binding TabBtnToggle}" Value="1">
                <Setter Property="Background" Value="#f1f1f1"/>
                <Setter Property="BorderBrush" Value="Black"/>
            </DataTrigger>

            <!-- set selected button dark mode color -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True"/>
                    <Condition Binding="{Binding TabBtnToggle}" Value="1"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="#393E46"/>
                <Setter Property="BorderBrush" Value="#f1f1f1"/>
            </MultiDataTrigger>

            <!-- set button highlight light mode color -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ffcab5 "/>
                <Setter Property="BorderBrush" Value="Gray"/>
            </Trigger>

            <!-- set button highlight dark mode color -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="DarkSalmon"/>
                <Setter Property="BorderBrush" Value="#f1f1f1"/>
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" x:Key="MainWindowSettingsTab">
        
        <!-- set unselected button light mode color -->
        <Setter Property="Background" Value="#f1f1f1"/>
        <Setter Property="BorderBrush" Value="#f1f1f1"/>
        
        <!-- set button highlight template color -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"  BorderThickness="0,0,0,5" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            
            <!-- set unselected button dark mode color -->
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="Background" Value="#393E46"/>
                <Setter Property="BorderBrush" Value="#393E46"/>
            </DataTrigger>
            
            <!-- set selected button light mode color -->
            <DataTrigger Binding="{Binding TabBtnToggle}" Value="2">
                <Setter Property="Background" Value="#f1f1f1"/>
                <Setter Property="BorderBrush" Value="Black"/>
            </DataTrigger>
            
            <!-- set selected button dark mode color -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True"/>
                    <Condition Binding="{Binding TabBtnToggle}" Value="2"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="#393E46"/>
                <Setter Property="BorderBrush" Value="#f1f1f1"/>
            </MultiDataTrigger>

            <!-- set button highlight light mode color -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#ffcab5 "/>
                <Setter Property="BorderBrush" Value="Gray"/>
            </Trigger>

            <!-- set button highlight dark mode color -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="true" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="DarkSalmon"/>
                <Setter Property="BorderBrush" Value="#f1f1f1"/>
            </MultiDataTrigger>
            
        </Style.Triggers>
    </Style>
    
    <!-- Summary page styles -->
    
    <Style TargetType="Border" x:Key="BorderStyle1">
        <Setter Property="Background" Value="White"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20" Color="#dddddd" Opacity="0.4" Direction="280" ShadowDepth="0" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="Background" Value="#232931"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="20" Color="#3b3b3b" Opacity="0.4" Direction="280" ShadowDepth="0" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ItemsControl" x:Key="GraphLabels">
        <Setter Property="TextBlock.Foreground" Value="Black"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="TextBlock.Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Line" x:Key="GraphXYLines">
        <Setter Property="Stroke" Value="LightGray"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="Stroke" Value="DarkGray"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Line" x:Key="GraphBorder">
        <Setter Property="Stroke" Value="Black"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="Stroke" Value="LightGray"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Grid x:Key="Download_Icon"  x:Shared="False">
        <Line
                                X1="0" Y1="0"
                                X2="0" Y2="20"
                                Stroke="LightSeaGreen"
                                StrokeThickness="2" Margin="0,0,10,0" VerticalAlignment="Center" />
        <Line
                                X1="0" Y1="20"
                                X2="6" Y2="10"
                                Stroke="LightSeaGreen"
                                StrokeThickness="2" Margin="0,0,0,0" VerticalAlignment="Center" />
        <Line
                                X1="0" Y1="20"
                                X2="-6" Y2="10"
                                Stroke="LightSeaGreen"
                                StrokeThickness="2" Margin="0,0,0,0" VerticalAlignment="Center" />
    </Grid>
    <Grid x:Key="Upload_Icon"  x:Shared="False">
        <Line
                                X1="0" Y1="0"
                                X2="0" Y2="20"
                                Stroke="LightSalmon"
                                StrokeThickness="2" Margin="0,0,10,0" VerticalAlignment="Center" />
        <Line
                                X1="0" Y1="-8"
                                X2="6" Y2="5"
                                Stroke="LightSalmon"
                                StrokeThickness="2" Margin="0,0,0,0" VerticalAlignment="Center" />
        <Line
                                X1="0" Y1="-8"
                                X2="-6" Y2="5"
                                Stroke="LightSalmon"
                                StrokeThickness="2" Margin="0,0,0,0" VerticalAlignment="Center" />
    </Grid>

    <!-- Detailed view page -->

    <Style TargetType="{x:Type DataGrid}" x:Key="DGHeaderStyle">
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DGCHeaderStyle}"/>
        <Setter Property="RowStyle" Value="{DynamicResource DGRowStyle}"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
    </Style>
    <Style x:Key="DGCHeaderStyle" TargetType="DataGridColumnHeader">

        <Setter Property="Height" Value="30"/>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3,2,2,2"/>
        <Setter Property="Background" Value="#c0e3da" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="Background" Value="#333333" />
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
        
    </Style>
    <Style x:Key="DGRowStyle" TargetType="DataGridRow">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="0.1"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static res:Settings.Default}, Path = DarkMode}" Value="True">
                <Setter Property="Background" Value="#333333" />
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    


</ResourceDictionary>